{
  "swagger": "2.0",
  "info": {
    "description": "ShopRelipees API document made by hungpt2",
    "version": "1.0.0",
    "title": "Shop Relipee API documentation",
    "contact": {
      "email": "hungpt2@relipasoft.com"
    }
  },
  "host": "sheltered-badlands-02083.herokuapp.com",
  "basePath": "/v1",
  "tags": [
    {
      "name": "Shop Relipees",
      "description": "API for Shop Relipees"
    }
  ],
  "schemes": ["http", "https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "API Endpoint for create User",
        "description": "Create new User in database",
        "parameters": [
          {
            "name": "user",
            "description": "User params to create new user",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#definitions/RegisterUser"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User Created successfully!!!",
            "schema": {
              "$ref": "#definitions/RegisterResponseSuccess"
            }
          },
          "400": {
            "description": "User Created Failed!!!",
            "schema": {
              "$ref": "#definitions/ResponseMessage"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "API Endpoint for login",
        "description": "Login and get token",
        "parameters": [
          {
            "name": "user",
            "description": "User params to create new user",
            "in": "body",
            "required": "true",
            "schema": {
              "$ref": "#definitions/Login"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "User Created successfully!!!",
            "schema": {
              "$ref": "#definitions/LoginResponseSuccess"
            }
          },
          "400": {
            "description": "User Created Failed!!!",
            "schema": {
              "$ref": "#definitions/ResponseMessage"
            }
          }
        }
      }
    },
    "/activated/{id}": {
      "get": {
        "tags": ["Authentication"],
        "summary": "API Endpoint for active account",
        "description": "Verify Account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": "true",
            "description": "verify code",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Account Activated!!!",
            "schema": {
              "$ref": "#definitions/RegisterResponseSuccess"
            }
          },
          "400": {
            "description": "Verify Failed!!!",
            "schema": {
              "$ref": "#definitions/ResponseMessage"
            }
          }
        }
      }
    },
    "/store": {
      "get": {
        "tags": ["Store Management"],
        "summary": "API Endpoint for Store Management",
        "description": "Get list Store",
        "parameters": [],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Get list successfully!!!"
          },
          "400": {
            "description": "Get list Failed!!!",
            "schema": {
              "$ref": "#definitions/ResponseMessage"
            }
          }
        }
      },
      "post": {
        "tags": ["Store Management"],
        "summary": "API Endpoint for Create Store",
        "description": "Create Store",
        "parameters": [],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Create store successfully!!!"
          },
          "400": {
            "description": "Create store Failed!!!",
            "schema": {
              "$ref": "#definitions/ResponseMessage"
            }
          }
        }
      },
      "put": {
        "tags": ["Store Management"],
        "summary": "API Endpoint for Update Store",
        "description": "Get list Store",
        "parameters": [],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Update Store successfully!!!"
          },
          "400": {
            "description": "Update Store Failed!!!",
            "schema": {
              "$ref": "#definitions/ResponseMessage"
            }
          }
        }
      },
      "delete": {
        "tags": ["Store Management"],
        "summary": "API Endpoint for Delete Store",
        "description": "Delete Store",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": "true",
            "description": "store id",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Delete Store successfully!!!"
          },
          "400": {
            "description": "Get list Failed!!!",
            "schema": {
              "$ref": "#definitions/ResponseMessage"
            }
          }
        }
      }
    }
  },

  "definitions": {
    "Login": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "RegisterUser": {
      "required": ["email", "password", "role"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "Int32"
        }
      }
    },
    "RegisterUserResponse": {
      "properties": {
        "email": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "Int32"
        }
      }
    },
    "ResponseMessage": {
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "RegisterResponseSuccess": {
      "properties": {
        "message": {
          "type": "string"
        },
        "user": {
          "$ref": "#definitions/RegisterUserResponse"
        }
      }
    },
    "LoginResponseSuccess": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "tokenExpired": {
          "type": "string"
        },
        "role": {
          "type": "integer",
          "format": "Int32"
        },
        "createdAt": {
          "type": "string"
        }
      }
    }
  }
}
